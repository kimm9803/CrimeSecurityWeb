<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">  
	
	<!-- 회원가입 -->
	<insert id="signup" parameterType="com.spring.member.vo.MemberVo">
		INSERT INTO member (memberid, passwd, name, nickname, tel, address, email, sex, address_postcode, address_primary, address_detail, email_id, email_domain)
		VALUES (#{memberid}, #{passwd}, #{name}, #{nickname}, #{tel}, #{address}, #{email}, #{sex}, #{address_postcode}, #{address_primary}, #{address_detail}, #{emailId}, #{emailDomain})
	</insert>
	
	<!-- 회원찾기 -->
	<select id="findById" parameterType="String" resultType="com.spring.member.vo.MemberVo">
		SELECT memberid, passwd, name, nickname, tel, address, email, sex, address_postcode, address_primary, address_detail, email_id AS emailId, email_domain AS emailDomain, regdate
		FROM member
		WHERE memberid = #{memberid}
	</select>
	
	<!-- 로그인 -->
	<select id="login" parameterType="com.spring.member.vo.MemberVo" resultType="com.spring.member.vo.MemberVo">
		SELECT memberid, passwd, name, nickname, address, email, sex, address_postcode, address_primary, address_detail, email_id AS emailId, email_domain AS emailDomain, regdate
		FROM member
		WHERE memberid = #{memberid} AND passwd = #{passwd} 
	</select>
	
	<!-- 회원수정 -->
	<update id="memberModify" parameterType="com.spring.member.vo.MemberVo">
		UPDATE member
		SET passwd = #{passwd}, nickname = #{nickname}, address = #{address},
			email  = #{email},  address_postcode = #{address_postcode}, address_primary = #{address_primary},
			address_detail = #{address_detail}, email_id = #{emailId}, email_domain = #{emailDomain}
		WHERE memberid = #{memberid}
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="memberDelete" parameterType="String">
		DELETE FROM member
		WHERE memberid = #{memberid}
	</delete>
	
	<!-- 닉네임 체크 -->
	<select id="nicknameCheck" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM member
		WHERE nickname = #{nickname}
	</select>
	
	<!-- 아이디 찾기(이메일 활용) -->
	<select id="findIdWithEmail" parameterType="String" resultType="String">
		SELECT memberid
		FROM member
		WHERE email = #{email}
	</select>
	
	<!-- 주문자 정보 -->
	<select id="findByOrderInfo" parameterType="hashMap" resultType="com.spring.member.vo.MemberVo">
		SELECT memberid, passwd, name, nickname, tel, address, email, sex, address_postcode, address_primary, address_detail, regdate
		FROM member
		WHERE name = #{name} AND tel = #{tel} AND email = #{email}
	</select>
</mapper>
